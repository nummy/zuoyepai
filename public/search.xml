<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>R语言代写: ADA2: HW2</title>
      <link href="/2019/02/12/R%E8%AF%AD%E8%A8%80%E4%BB%A3%E5%86%9920190212/"/>
      <url>/2019/02/12/R%E8%AF%AD%E8%A8%80%E4%BB%A3%E5%86%9920190212/</url>
      
        <content type="html"><![CDATA[<p>A university medical center urology group (Stamey, et al., 1989) was interested in the association between a<br>prostate-speciﬁc antigen (PSA) and a number of prognostic clinical measurements in men with advanced<br>prostate cancer. Data were collected on 97 men who were about to undergo radical prostectomies.</p><p>Following variable PSA (Serum prostate-speciﬁc antigen level (ng/ml)) are the measures: cancer volume<br>(Estimate of prostate cancer volume (cc)), prostate weight (gm), patient age, the amount of benign prostatic<br>hyperplasia (cm2) hyperplasia, seminal vesicle invasion with 1 if yes, 0 if no, capsular penetration (cm), and<br>gleason score (Pathologically determined grade of disease (6,7,8), higher indicates worse prognosis).</p><p><strong>Background</strong>: Until recently, PSA was commonly recommended as a screening mechanism for detecting<br>prostate cancer. To be an eﬃcient screening tool it is important that we understand how PSA levels relate to<br>factors that may determine prognosis and outcome. The PSA test measures the blood level of prostate-speciﬁc<br>antigen, an enzyme produced by the prostate. PSA levels under 4 ng/mL (nanograms per milliliter) are<br>generally considered normal, while levels over 4 ng/mL are considered abnormal (although in men over 65<br>levels up to 6.5 ng/mL may be acceptable, depending upon each laboratorys reference ranges). PSA levels<br>between 4 and 10 ng/mL indicate a risk of prostate cancer higher than normal, but the risk does not seem to<br>rise within this six-point range. When the PSA level is above 10 ng/mL, the association with cancer becomes<br>stronger. However, PSA is not a perfect test. Some men with prostate cancer do not have an elevated PSA,<br>and most men with an elevated PSA do not have prostate cancer. PSA levels can change for many reasons<br>other than cancer. Two common causes of high PSA levels are enlargement of the prostate (benign prostatic<br>hypertrophy (BPH)) and infection in the prostate (prostatitis).</p><h3 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h3><p>A goal here is to build a multiple regression model to predict PSA level PSA from a subset of the predictors:<br>the cancer volume, Prostate weight, Age, Benign prostatic and Capsular penetration.</p><ul><li>(1) Looking at the data. Plot scatter plot matrix, correlation matrix of Y and a subset of predictors, and<br>brieﬂy comment on them.</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fn.data &lt;- <span class="string">"http://statacumen.com/teach/ADA2/homework/ADA2_HW_03_psa.txt"</span></span><br><span class="line">psa &lt;- read.table(fn.data, header=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># remove the variables we don't want to use for this assignment</span></span><br><span class="line">psa &lt;- subset(psa, select = names(psa)[-c(<span class="number">1</span>,<span class="number">7</span>,<span class="number">9</span>)])</span><br><span class="line">names(psa)</span><br><span class="line"><span class="comment"># simplify column names</span></span><br><span class="line">colnames(psa) &lt;- c(<span class="string">"PSA"</span>, <span class="string">"v"</span>, <span class="string">"wt"</span>, <span class="string">"age"</span>,<span class="string">"benigh"</span>,<span class="string">"capsular"</span>)</span><br></pre></td></tr></table></figure><ul><li>(2) Fit the full aditive model, check model assumptions.</li><li>(3) Check Y outliers, X outliers, and inﬂuential data points.</li><li>(4) Are there any interaction terms need to be included?</li><li>(5) Do transformation on Y or Xs or both if needed. After that, check model assumptions again. (Please<br>only include transformations that make model assumptions met.)</li><li>(6) Fit an appropriate full model and perform backward selection.</li><li>(7) Fit an appropriate full model and perform best subset selection using adjusted R2, Cp and BIC criteria.</li><li>(8) From the above model selection methods, which model seems appropriate? Check model assumptions<br>for this model. Check VIF.</li><li>(9) For the model you derived in (8), check Y outliers, X outliers, and inﬂuential data points. If you<br>identify some outliers, can you remove them?</li><li>(10) Suggest a ﬁnal model for use.</li></ul>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> R语言代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python代写:数据划分算法</title>
      <link href="/2019/01/30/Python%E4%BB%A3%E5%86%9920190130/"/>
      <url>/2019/01/30/Python%E4%BB%A3%E5%86%9920190130/</url>
      
        <content type="html"><![CDATA[<p>When developing a machine learning model from a cleaned dataset, you first need to split the data into three sets: The training set, the validation set, and the testing set. How you split the data is a very important issue.</p><p>For this project you will be using a stratification method to decide how to split the data. In the dataset, you will have several categorical variables (variables whose value takes on one of a discrete set of categories). Some of these variables are particularly important to our model and we would like to be sure that we preserve the proportions of these variables’ categories from the original dataset within each of our new datasets. </p><p>For example, say you have an important categorical variable named var1 which can take values in the set {A, B, C, D}. Further suppose that within the original dataset, 40% of rows have value A for var1, 25% have value B, 20% have value C, and 15% have value D. Your code should split the data such that for the training set, 40% of rows have value A for var1, 25% have value B, 20% have value C, and 15% have value D. The same should be true for the testing and validation sets. </p><p>We may want to preserve the proportions of many variables, so your code should be scalable. The proportions do not have to be exactly the same in all the sets, as long as it is as close as possible. The training, validation, and testing sets should be disjoint and cover all rows in the original dataset. You should have the training data make up 70% of the original dataset, and the validation and testing sets should each make up 15% of the original dataset. Each dataset you create should be saved to its own .csv file. </p><p>I have provided a sample dataset for you to run your code on. I will be testing your code on this dataset and on other datasets of similar format that you will not have access to. All datasets will be in csv format. The dataset may contain mixed categorical and numeric variables. As input, your program should take the names of the specific variables we want to preserve. We will only ever ask you to preserve the proportions of a categorical variable. Remember, we may ask you to preserve the proportions of multiple variables. As output, you should save the generated files in a csv format. </p><p>Along with the submission of your code, please also include a README file. In the readme you must give instructions on how to run your code including all inputs the code requires. You must also explain what output the code will provide. In addition, please briefly describe the algorithm you implemented. Also provide the runtime complexity of your algorithm using big O notation. </p><p>Please write your code using python. If you think another language would be better suited to this task, use python anyway, but also explain in your README which other language you would have chosen and why you would have preferred it. Please do not submit your code as a Jupyter notebook. </p><p>You may use any and all resources at your disposal, however you may not have another person write any of the code for you. If you have taken any code from a website, please include the link to this website in your README, and in a comment where the code is implemented. </p><p>Code is expected to be efficient, concise, and scalable. </p>]]></content>
      
      
      <categories>
          
          <category> Python代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python代写: Assignment 3</title>
      <link href="/2019/01/28/Python%E4%BB%A3%E5%86%99-20190128/"/>
      <url>/2019/01/28/Python%E4%BB%A3%E5%86%99-20190128/</url>
      
        <content type="html"><![CDATA[<h2 id="CSc-120-Words-ending-with"><a href="#CSc-120-Words-ending-with" class="headerlink" title="CSc 120: Words ending with"></a>CSc 120: Words ending with</h2><h3 id="Expected-Behavior"><a href="#Expected-Behavior" class="headerlink" title="Expected Behavior"></a>Expected Behavior</h3><p>Write a function words_ending_with(wordlist, tail) that behaves as follows. The argument wordlist is a list of strings, while the argument tail is a string. words_ending_with(wordlist, tail) returns a list consisting of those strings in wordlist that end with tail. If none of the strings in wordlist end with tail, it returns the empty list.<br>The order of list elements in the list returned by the function should match the order of their occurrence in wordlist.</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p>In the examples below, wordlist is the list</p><p>[‘evolve’, ‘absolve’, ‘crow’, ‘spoke’, ‘truck’, ‘lake’, ‘wow’, ‘wave’]</p><ol><li>words_ending_with(wordlist, ‘ow’)<br>Return value: [‘crow’, ‘wow’]</li><li>words_ending_with(wordlist, ‘lve’)<br>Return value: [‘evolve’, ‘absolve’]</li><li>words_ending_with(wordlist, ‘e’)<br>Return value: [‘evolve’, ‘absolve’, ‘spoke’, ‘lake’, ‘wave’]</li><li>words_ending_with(wordlist, ‘ke’)<br>Return value: [‘spoke’, ‘lake’]</li><li>words_ending_with(wordlist, ‘ing’)<br>Return value: []</li></ol><h2 id="CSc-120-Words-beginning-with"><a href="#CSc-120-Words-beginning-with" class="headerlink" title="CSc 120: Words beginning with"></a>CSc 120: Words beginning with</h2><h3 id="Expected-Behavior-1"><a href="#Expected-Behavior-1" class="headerlink" title="Expected Behavior"></a>Expected Behavior</h3><p>Write a function words_beginning_with(wordlist, head) that behaves as follows. The argument wordlist is a list of strings, while the argument head is a string. words_beginning_with(wordlist, head) returns a list consisting of those strings in wordlist that begin with head. If none of the strings in wordlist begin with head, it returns the empty list.<br>The order of list elements in the list returned by the function should match the order of their occurrence in wordlist.</p><h3 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h3><p>In the examples below, wordlist is the list</p><p>[‘evolve’, ‘absolve’, ‘evil’, ‘absent’, ‘evidence’, ‘lake’, ‘ladder’, ‘list’]</p><ol><li>words_beginning_with(wordlist, ‘ev’)<br>Return value: [‘evolve’, ‘evil’, ‘evidence’]</li><li>words_beginning_with(wordlist, ‘evi’)<br>Return value: [‘evil’, ‘evidence’]</li><li>words_beginning_with(wordlist, ‘e’)<br>Return value: [‘evolve’, ‘evil’, ‘evidence’]</li><li>words_beginning_with(wordlist, ‘la’)<br>Return value: [‘lake’, ‘ladder’]</li><li>words_beginning_with(wordlist, ‘ing’)<br>Return value: []</li></ol>]]></content>
      
      
      <categories>
          
          <category> Python代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言代写:Chapter3</title>
      <link href="/2019/01/27/R%E4%BB%A3%E5%86%99-20190127/"/>
      <url>/2019/01/27/R%E4%BB%A3%E5%86%99-20190127/</url>
      
        <content type="html"><![CDATA[<h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question 1"></a>Question 1</h3><p>Let X be a random variable uniformly distributed over the interval [2, 6], and let Y be a random variable distributed according to Tria( 2, 3, 7). </p><ul><li>Write the pdf and cdf of each of these random variables. </li><li>Compute their means and variances.</li></ul><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question 2"></a>Question 2</h3><p>Suppose that X is distributed according to Unif( 10, B), for some B &gt; 10. </p><ul><li>How does the squared coefficient of variation vary as B increases? Show this behavior in a graph. </li><li>Repeat the same investigation for X distributed according to Tria( 1, 4, B), and compare the corresponding graph to the previous one. </li></ul><h3 id="Question-3"><a href="#Question-3" class="headerlink" title="Question 3"></a>Question 3</h3><p>Construct the formula for a linear congruential generator with m = 10, 000 and values of your choice for a and c. Set the last four digits of your Social Security Number as the initial seed, x0 (if the leading digit of x0 is 0, then change it to 9). Use this RNG to generate one complete period of random numbers. If the period turns out to be less than 1000, experiment with other values of a and c until you obtain an RNG with a period of at least 1000. Compute the mean, variance, and squared coefficient of variation of this sequence, as well as its histogram (use 10 cells). </p><h3 id="Question-4"><a href="#Question-4" class="headerlink" title="Question 4"></a>Question 4</h3><p>Derive a formula for generating variates from the geometric distribution of mean 4, using the Inverse Transform method, and then apply it to obtain two samples: x1 using u1 = 0.2, and x2 using u = 0.7. (Hint: Consult Section 3.7.4.) </p><h3 id="Question-5"><a href="#Question-5" class="headerlink" title="Question 5"></a>Question 5</h3><p>Consider a random variable X with pdf a. Show that this is a legitimate pdf. b. Derive a formula for generating variates from fX( x), using the Inverse Transform method, and then apply it to obtain two samples: x1 using u1 = 0.4, and x2 using u2 = 09. </p><h3 id="Question-6"><a href="#Question-6" class="headerlink" title="Question 6"></a>Question 6</h3><p>Derive a formula for generating variates from the Weib( 2, 0.5) distribution, and then apply it to obtain two samples: x1 using u1 = 0.5, and x2 using u2 = 0.75. (Hint: Consult Section 3.8.11.) </p>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言代写: TicTacToe</title>
      <link href="/2019/01/26/R%E4%BB%A3%E5%86%9920190126/"/>
      <url>/2019/01/26/R%E4%BB%A3%E5%86%9920190126/</url>
      
        <content type="html"><![CDATA[<p>使用R编写小游戏TicTacToe，专业代写R语言作业，Assignment，Project，保证原创。</p><p>Please do your best to complete this assignment on your own, and resist the temptation to look at someone else’s solution, or to copy someone else’s work.</p><p>Students who are found to be in violation of the policies regarding academic integrity will be reported to the dean of students.</p><p>You will get out of this class what you put in. You will only get better at coding if you challenge yourself. This assignment is intended to be challenging, but not insurmountable. Your code need not be very complicated. You will NOT be graded on coding efficiency, but so you have an idea, my implementation is 145 lines of code.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"># These are some recommendations for tic-tac-toe:</span><br><span class="line"># You are welcome to implement the game another way.</span><br><span class="line"># You will be graded on whether your game works or not. Point details are in the HW assignment instructions.</span><br><span class="line"></span><br><span class="line"># First, there are 8 ways to win. I have stored them as a list called triples.</span><br><span class="line"></span><br><span class="line">triples &lt;- list(</span><br><span class="line">  c(1,2,3),</span><br><span class="line">  c(4,5,6),</span><br><span class="line">  c(7,8,9),</span><br><span class="line">  c(1,4,7),</span><br><span class="line">  c(2,5,8),</span><br><span class="line">  c(3,6,9),</span><br><span class="line">  c(1,5,9),</span><br><span class="line">  c(3,5,7)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># The `state` of the game can be stored as a character vector of length 9. </span><br><span class="line"># I used NA for spots that were unplayed, and entered &quot;x&quot; and &quot;o&quot; as the game progressed.</span><br><span class="line"># For example, when I start the game, I made a vector called state with 9 NAs</span><br><span class="line"># state</span><br><span class="line"># [1] NA  NA  NA  NA  NA  NA  NA  NA  NA </span><br><span class="line"># Let&apos;s say &apos;x&apos; plays in the middle spot (position 5)</span><br><span class="line"># the state becomes:</span><br><span class="line"># [1] NA  NA  NA  NA  &quot;x&quot; NA  NA  NA  NA </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># When I created the game, I created the following functions:</span><br><span class="line"></span><br><span class="line"># display(state)  </span><br><span class="line"># displays the current state of the board.</span><br><span class="line"></span><br><span class="line"># prompt_user(who, state)</span><br><span class="line"># prompts the user for where they want to play.</span><br><span class="line"># checks to see if the move is legal or not</span><br><span class="line"></span><br><span class="line"># update(state, who, pos)  </span><br><span class="line"># updates the state of the board by putting an x or o (who) </span><br><span class="line"># in the designated position (pos) </span><br><span class="line"></span><br><span class="line"># computer_turn(state)  </span><br><span class="line"># has the computer take a turn. The input is the state.</span><br><span class="line"># The function returns the position where the computer will play.</span><br><span class="line"></span><br><span class="line"># check_winner(state)   </span><br><span class="line"># checks if there is a winner.</span><br><span class="line"></span><br><span class="line"># play() # the &apos;wrapping&apos; function that lets you play a game by combining the above functions.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># The display(state) function presents the board as a 3x3 grid with numbers in the positions as follows.</span><br><span class="line"># I used cat() with the state vector to create the board</span><br><span class="line">#  x | 2 | 3  </span><br><span class="line"># ---+---+---</span><br><span class="line">#  4 | o | 6  </span><br><span class="line"># ---+---+---</span><br><span class="line">#  7 | 8 | 9</span><br><span class="line"></span><br><span class="line"># As the game progresses, the display function should output the current state of the game board. For example:</span><br><span class="line">  </span><br><span class="line"># The function `update(state, who, pos)` takes the current state of the game and puts in an &apos;x&apos; or &apos;o&apos; in the designated position. </span><br><span class="line"># This function should be very simple to implement.</span><br><span class="line"></span><br><span class="line"># The `computer_turn` function reads the current board and returns where it will play next. </span><br><span class="line"># The `computer_turn` is able to deduce whether the computer is playing as x or as o.</span><br><span class="line"># The function also implements some basic strategy (wins and blocks).</span><br><span class="line"></span><br><span class="line"># The `play` function puts everything together.</span><br><span class="line"></span><br><span class="line"># The function first asks if there is one or two human players. </span><br><span class="line"># If there is one human player, it asks if the human will play first or second.</span><br><span class="line"></span><br><span class="line"># I&apos;ve outlined in psuedo-code how I imagine you can set up the play function:</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"># play &lt;- function()&#123;</span><br><span class="line"># # determine game conditons: 1 or 2 players. If computer plays, is it player 1 or 2.</span><br><span class="line"># # initialize game board</span><br><span class="line"></span><br><span class="line"># # while( no winner )&#123;</span><br><span class="line"># # x&apos;s turn</span><br><span class="line"># display() # display board </span><br><span class="line"># # x chooses where to play. prompt_user() or computer_turn()</span><br><span class="line"># update() # update board</span><br><span class="line"># check_winner() # if x wins - quit loop</span><br><span class="line"># # o&apos;s turn</span><br><span class="line"># display() # display board </span><br><span class="line"># # o chooses where to play. prompt_user() or computer_turn()</span><br><span class="line"># update() # update board</span><br><span class="line"># check_winner() # if o wins - quit loop</span><br><span class="line"># &#125;</span><br><span class="line"># # display final board state and who the winner is</span><br><span class="line"># &#125;</span><br><span class="line"></span><br><span class="line"># These are recommendations that I make for programming the game. </span><br><span class="line"># You are welcome to implement the game another way.</span><br><span class="line"># You will be graded on whether your game works or not. Point details are in the HW assignment instructions.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> R语言代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R代写：Assignment 1</title>
      <link href="/2019/01/25/R%E4%BB%A3%E5%86%9920190125/"/>
      <url>/2019/01/25/R%E4%BB%A3%E5%86%9920190125/</url>
      
        <content type="html"><![CDATA[<h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question 1"></a>Question 1</h3><p>Consider the 3 pairs of side-by-side box plots given below, which were drawn in R. The data for this question is in the file “juries.csv”.</p><ul><li>(a) Recreate the side-by-side box plots and include the last four digits of your student number in the title. For each pair of box plots, provide the single line of R code, beginning with the R function- boxplot used to recreate it.</li><li>(b) For each box plot specify the values of the following - the first quartile, the second quartile, the third quartile, the end points of the two whiskers, the extreme (outlier) points (identified as small circles), if any, and the limits of the 1.5IQR Rule Range.</li><li>(c) Compare the three pairs of box plots. Which pair best represents the data and why?</li></ul><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question 2"></a>Question 2</h3><p>Consider the data, \bbw99.csv” based on the birth weights of 99 babies, along with the smoking status of their mothers. Answer the questions that follow. The variables in the dataset are:</p><ul><li>id- an identification number from 1 to 99</li><li>bwt- baby birth weight in ounces</li><li><p>smoke- smoking status of mother (coded as 0, if she was a non-smoker, and 1, otherwise)</p></li><li><p>(a) Which variables are categorical? Name the levels of each categorical variable.</p></li><li><p>(b) Conduct an appropriate hypothesis test to determine whether there is a difference in the mean birth weight between babies born to mothers who were smokers and babies born to mothers who were nonsmokers. Include the following:</p><ul><li>i. Side-by-side boxplots</li><li>ii. Null and Alternative Hypotheses</li><li>iii. A test statistic and it’s distribution</li><li>iv. Test assumptions</li><li>v. Test diagnostics (checking model assumptions)</li><li>vi. P-value</li><li>vii. Results (brief discussion and conclusion)</li></ul></li><li><p>(c) Name two(2) statistical methods which are equivalent to your method used in part (b) above.</p></li><li>(d) Create a subset of the data by removing the row of observations whose ‘id’ matches the last 2 digits of your student number . For instance, this can be done in R by <code>shivon:subset &lt;-  shivon:data[-1,]</code> if my student number ends with <code>01</code>. Then redo the analyses of part (b) above with your data subset.</li><li>(e) Compare your results of part (b) and part (d). Do you think that the observation removed was in influential?</li></ul>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> R语言代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java代写：CSE105 Coursework 1</title>
      <link href="/2019/01/18/Java%E4%BB%A3%E5%86%9920190118/"/>
      <url>/2019/01/18/Java%E4%BB%A3%E5%86%9920190118/</url>
      
        <content type="html"><![CDATA[<p>代写Java Assignment, Project, Lab, Data Structure, Algorithm, 价格优惠，保证质量，原创唯一。</p><p>There are five tasks. Each task is worth 20 points. The assessment contributes 15% to your final grade on this module. </p><p>Each task should be in its own Class. See important notes on submission format at the end: you must submit INDIVIDUAL .TXT FILES, not .java files.  </p><h3 id="Task-1-Conversion"><a href="#Task-1-Conversion" class="headerlink" title="Task 1: Conversion"></a>Task 1: Conversion</h3><p>Write a program that converts measurements from fathoms to metres. A fathom is an old imperial measure of water depth. 1 fathom = 1.8288m. </p><p>You program should: </p><ul><li>Tell the user what it does. </li><li>Ask the user for an input range [eg 1-10] </li><li>Print a labeled and formatted table showing the values for this range</li></ul><h3 id="Task-2-A-Story"><a href="#Task-2-A-Story" class="headerlink" title="Task 2: A Story"></a>Task 2: A Story</h3><p>Write a program that writes a story, specially personalised for the user.  </p><p>For example: </p><p>The program should ask the user to input:</p><ul><li>His/her name </li><li>His/her gender </li><li>His/her age </li><li>The name of a city </li><li>The name of a university </li><li>A profession </li><li>Another person’s name </li></ul><p>After the user has entered all these items, the program should display a story, inserting the user’s input at the appropriate location, eg: </p><ul><li>There once was a person called James who lived in Suzhou. At the age of 19, James went to university at Harvard. When he graduated, he became an accountant, and married another accountant called Susan. </li></ul><h3 id="Task-3-Time"><a href="#Task-3-Time" class="headerlink" title="Task 3: Time"></a>Task 3: Time</h3><p>Write a program that asks the user to enter a number of seconds. The program should then calculate the number of days, minutes, hours and seconds represented by the input value. </p><h3 id="Task-4-Game-simulation"><a href="#Task-4-Game-simulation" class="headerlink" title="Task 4: Game simulation"></a>Task 4: Game simulation</h3><p>Dice simulation </p><p>Program a game played with 4 dice. </p><p>On each play, the program generates 4 random whole numbers from 1 to 6. Each one represents the score on 1 dice. </p><ul><li>If 2 dice match, the player scores 2 points. </li><li>If 3 dice match, the player scores 3 points. </li><li>If 4 dice match, the player scores 4 points. </li></ul><p>The program ask whether the user wants to play again. If not, the total score for the game so far is displayed. </p><h3 id="Bonus-task-4A"><a href="#Bonus-task-4A" class="headerlink" title="Bonus task 4A"></a>Bonus task 4A</h3><p>Display a small window (a Frame) which displays one image each for the four dice in Task 4 above. The images should change to represent the values of the dice in each play. The dice can be standard, with 1 to 6 dots, or pictorial, with a different image on each face. You can draw a dice with dots using the methods of a Graphics object, or you can display an image from file – up to you. </p>]]></content>
      
      
      <categories>
          
          <category> Java代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++代写：C++ Programming Homework 4</title>
      <link href="/2019/01/18/C++%E4%BB%A3%E5%86%9920190118/"/>
      <url>/2019/01/18/C++%E4%BB%A3%E5%86%9920190118/</url>
      
        <content type="html"><![CDATA[<p>代写代做C++作业，C++ assignment, project, homework, lab, 价格优惠，保证原创。</p><h3 id="Question1-40-points"><a href="#Question1-40-points" class="headerlink" title="Question1(40 points)"></a>Question1(40 points)</h3><p>Write a String class which will be a wrapper class to the C style strings. The strings will be of varying lengths and must grow and shrink as necessary. Your String class must implement all the appropriate methods including constructors/destructor, assignment, equality operators, the index operator, reverse, indexOf (find), print, and read. Do not use any of the C  str functions (e.g. strcmp, or strcpy), however write them yourself, as static methods, then use them. Note, you will use dynamic allocation (by calling new[]) and you must delete[] the storage you allocate when you no longer need it. strdup() will allocate the right amount of storage and make an exact copy of the string passed in as argument, then return the address of that new storage.  It will be useful for implementing many methods including the constructors.  Note some of your methods will work fine using the implementation from homework 3, but it is up to you to figure out which ones are ok and which must be re-written.</p><h3 id="Question2-10-points"><a href="#Question2-10-points" class="headerlink" title="Question2(10 points)"></a>Question2(10 points)</h3><p>File organization: This is a good time to learn about splitting classes into declaration and method definitions.  Put the declaration of class String in a file named String.h.  Put the definitions of the String methods in a file called String.cpp.  Put your main program and testing functions in a file named string_test.cpp. string_test.cpp and String.cpp must include String.h. You can compile your program with the comand <code>g++ String.cpp string_test.cpp -o string_test</code> .  You can run it by calling string_test.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="comment">/// Both constructors should construct</span></span><br><span class="line">        <span class="comment">/// this String from the parameter s</span></span><br><span class="line">        <span class="function"><span class="keyword">explicit</span> <span class="title">String</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> * s = <span class="string">""</span>)</span></span>;</span><br><span class="line">        String( <span class="keyword">const</span> String &amp; s );</span><br><span class="line">        String <span class="keyword">operator</span> = ( <span class="keyword">const</span> String &amp; s );</span><br><span class="line">        <span class="keyword">char</span> &amp; <span class="keyword">operator</span> [] ( <span class="keyword">int</span> index );</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function">String <span class="title">reverse</span><span class="params">()</span></span>; <span class="comment">// does not modify this String</span></span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">( <span class="keyword">const</span> <span class="keyword">char</span> c )</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">( <span class="keyword">const</span> String pattern )</span></span>;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> == ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> != ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &gt; ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; ( <span class="keyword">const</span> String s )</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;= ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &gt;= ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="comment">/// concatenates this and s to return result</span></span><br><span class="line">        String <span class="keyword">operator</span> + ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="comment">/// concatenates s onto end of this</span></span><br><span class="line">        String <span class="keyword">operator</span> += ( <span class="keyword">const</span> String s );</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">( ostream &amp; out )</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">( istream &amp; in )</span></span>;</span><br><span class="line">        ~String();</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">inBounds</span><span class="params">( <span class="keyword">int</span> i )</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> i &gt;= <span class="number">0</span> &amp;&amp; i &lt; <span class="built_in">strlen</span>(buf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">strlen</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *src)</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">char</span> *<span class="title">strdup</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *src)</span></span>; <span class="comment">// notice this new function</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">strcpy</span>(<span class="keyword">new</span> <span class="keyword">char</span>[<span class="built_in">strlen</span>(src+<span class="number">1</span>)], src);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// … and any other auxilliary static methods you need</span></span><br><span class="line">        <span class="keyword">char</span> * buf; <span class="comment">// base of array for the characters in this string</span></span><br><span class="line">        <span class="comment">// DO NOT add a length data member!! use the null terminator</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ostream &amp; <span class="keyword">operator</span> &lt;&lt; ( ostream &amp; out, String str );</span><br><span class="line">istream &amp; <span class="keyword">operator</span> &gt;&gt; ( istream &amp; in, String &amp; str );</span><br></pre></td></tr></table></figure><h3 id="Question3-20-points"><a href="#Question3-20-points" class="headerlink" title="Question3(20 points)"></a>Question3(20 points)</h3><p>Write a main function which tests each function defined in your class String.  You may reuse part or all of your main from the previous homework if it is good.</p><h3 id="Question4-10-points"><a href="#Question4-10-points" class="headerlink" title="Question4(10 points)"></a>Question4(10 points)</h3><p>Write two functions, <code>new char[n_bytes] →  new_char_array(int n_bytes)</code>, and <code>delete[] p → delete_char_array(char *p)</code>, which keep track of the number of array allocations in a static counter initialized to zero (see the lecture slides for an example).  Call these functions instead of new and delete.  Print out the value of your allocation counter at the end of your main function.  It must be zero. Use this format: ”Number of new allocations minus number of delete deallocations is 0.</p><h3 id="Question5-20-points"><a href="#Question5-20-points" class="headerlink" title="Question5(20 points)"></a>Question5(20 points)</h3><p>Get your program to compile and run with the main below in a file named standard_main.cpp which includes your string.h and is linked with your string.cpp. You can compile your this second program with the comand g++ String.cpp standard_main.cpp -o standard_main .  You can run it by calling standard_main</p>]]></content>
      
      
      <categories>
          
          <category> C++代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论代写: stat100b_hw2_w19</title>
      <link href="/2019/01/17/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%BB%A3%E5%86%9920190117/"/>
      <url>/2019/01/17/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%BB%A3%E5%86%9920190117/</url>
      
        <content type="html"><![CDATA[<p>代写留学生概率论作业，probability homework, 数学作业。</p><h3 id="EXERCISE-1"><a href="#EXERCISE-1" class="headerlink" title="EXERCISE 1"></a>EXERCISE 1</h3><p>Let $X~N(\mu,\sigma)$</p><ul><li>a. Use the properties of moment generating functions to show that $aX + b \sim N(a\mu + b; a\sigma)$.</li><li>b. Use the cdf method to show that $aX + b \sim N(a\mu + b; a\sigma)$.</li></ul><h3 id="EXERCISE-2"><a href="#EXERCISE-2" class="headerlink" title="EXERCISE 2"></a>EXERCISE 2</h3><p>Answer the following questions:</p><ul><li><p>a. Let $ln(X) \sim  N(\mu, \sigma)$. Find $EX$ and $var(X)$.</p></li><li><p>b. Let $X_{1},X_{2},…,X_{n}$ be independent random variables having respectively the normal distributions $N(\mu_{i}, \sigma_{i}); i = 1,…,n$. Consider the random variable $Y = \sum_{i=1}^{n}k_{i}X_{i}$. Use moment generating functions to find the distribution of $Y$.</p></li><li><p>c. Let $X_{1},X_{2}, …, X_{n}$ be i.i.d. random variables with $X_{i} \sim  \Gamma(\alpha, \beta)$. Use the properties of moment generating functions to find the distribution of $T = X_{1} + X_{2} + …X_{n}$ and $\overline{X} = \frac{X_{1}+X_{2}+…X_{n}}{n}$.</p></li></ul><h3 id="EXERCISE-3"><a href="#EXERCISE-3" class="headerlink" title="EXERCISE 3"></a>EXERCISE 3</h3><p>Let $X \sim N(\mu; \sigma)$. Stein’s lemma states that if g is a differentiable function satisfying $Eg’(X) &lt; \infty$ then $E[g(X)(X - \mu)] = \sigma^{2}Eg’(X)$. Use Stein’s lemma to show that $EX^4 = \mu^4 +6\mu^2\sigma^2 +3\sigma^4$. Hint: Write $EX^4$<br>as $EX^3(X - \mu + \mu)$.</p>]]></content>
      
      
      <categories>
          
          <category> 概率论代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论代写 </tag>
            
            <tag> Math代写 </tag>
            
            <tag> Probability代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++代写: Programming Project7</title>
      <link href="/2019/01/16/C++%E4%BB%A3%E5%86%9920190116/"/>
      <url>/2019/01/16/C++%E4%BB%A3%E5%86%9920190116/</url>
      
        <content type="html"><![CDATA[<p>C++实现k近邻算法</p><h3 id="The-Problem"><a href="#The-Problem" class="headerlink" title="The Problem"></a>The Problem</h3><p>Machine learning is a common term used these days. One of the many areas where machine learning is used is in pattern recognition, specifically in the area of classifying a “thing” as to its type. This is the overall problem we are going to address today.  </p><h3 id="The-k-nearest-neighbor-classifier"><a href="#The-k-nearest-neighbor-classifier" class="headerlink" title="The k-nearest neighbor classifier"></a>The k-nearest neighbor classifier</h3><p>A relatively simple, though potentially computationally expensive, algorithm to classifying an unknown element in terms of known elements is called a k-nearest neighbor classifier, a knn for short. It works as<br>follows. </p><p>Imagine you have two measurements you have performed on a set of objects: let’s say size and cost. We call these the features of the classification problem. You plot (in 2D for two features, in higher dimensions for more features) the location of all the known objects with respect to their feature values on a graph. You also label each of the known objects as to their known class, here indicated by the colors red and blue.  </p><p>We then place an unknown object (represented by ?), whose class we do not know, into the graph based on its features and find its k nearest neighbors, in this case k=3. The situation is shown below.</p><p>We can then answer the following questions as to what “class” the unknowns are based on their three nearest neighbors in the 2 feature space.<br>•  ?1 is a “red” thing<br>•  ?2 is a “blue” thing<br>•  ?3 is 2/3 red and 1/3 blue </p><h3 id="Your-Tasks"><a href="#Your-Tasks" class="headerlink" title="Your Tasks"></a>Your Tasks</h3><p>Complete the Project 7 by writing code for the following functions. Details of type for the functions can be found in proj07_functions.h (provided for you, see details below). There are some supporting functions here that will help you solve and debug the problem. </p><p><strong>function split</strong> : <code>vector&lt;string&gt; split(const string &amp;s, char delim)</code></p><p>You supposedly wrote this for lab06. Takes in a string, splits it into its parts as separated by the character delim. In the header the default for delim is a space (note again you only do the defaults in the header, not in the code itself). Returns a vector<string> for each string in the delim separated string s. </string></p><p><strong>function read_data</strong> : <code>void read_data(map&lt;vector&lt;double&gt;, string&gt; &amp;m, unsigned int feature_count, ifstream &amp;inf)</code><br>Reads in every line of data from an already opened ifstream reference and fills in map m. Each line of<br>the file consists of feature_count features (for iris, 4). Each feature is a double and each is separated<br>by a comma. The last element is a string, the class type for this feature combination. An empty map is<br>passed in by reference and filled by the function.  </p>]]></content>
      
      
      <categories>
          
          <category> C++代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R代写:assigment stat-4_2692</title>
      <link href="/2019/01/16/R%E4%BB%A3%E5%86%9920190116/"/>
      <url>/2019/01/16/R%E4%BB%A3%E5%86%9920190116/</url>
      
        <content type="html"><![CDATA[<p>代写R基础题目，正态分布，假设校验，随机抽样等。</p><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question 1"></a>Question 1</h3><p>Part 2: Non-normal distribution. We will now study a population with an Exponential distribution. Generate a large sample from the Exponential distribution with rate parameter 0.5. This distribution has mean $\mu$ = 2 and standard deviation $\sigma$ = 2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- rexp(1000,0.5)</span><br><span class="line">mean(x)</span><br><span class="line">sqrt(var(x))</span><br><span class="line">hist(x)</span><br></pre></td></tr></table></figure><p>a) Since the sample size $n = 1000$ is so large, the histogram, the sample mean and sample variance should be close to the population distribution, mean and variance. In words, describe the shape of the histogram.</p><p>b) Now, we will generate the sampling distribution of the sample mean, when the population is exponential. Repeat the same simulation procedure as in Part 1, but replace the line <code>x &lt;- rnorm (12, 2, 0.5)</code> with <code>x &lt;- rexp(12,0.5)</code>.</p><p>c) Repeat b) but with different sample size, say 30. That is, replace the line <code>x &lt;- rexp(12,0.5)</code> with <code>x &lt;- rexp(30,0.5)</code>.</p><p>d) Compare the shape of the histogram, the mean and standard deviation of the sample mean when the sample size gets larger.</p><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question 2"></a>Question 2</h3><p>In a third-year statistics course with an enrollment of 30 students, the grades on the rst assignment, for all 30 students, are displayed in the table below. We will consider the 30 students to be the population of our interest. We assume a student’s grade follows a $N(\mu, \sigma^{2})$ distribution. Obtain a random sample of 10 students from the population. This can be done using the following command.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enter all grades following the same order as in the table.</span></span><br><span class="line">x=c(<span class="number">82</span>,<span class="number">76</span>,<span class="number">76</span>,<span class="number">92</span>,<span class="number">84</span>,<span class="number">82</span>,<span class="number">70</span>,<span class="number">92</span>,<span class="number">84</span>,<span class="number">97</span>,<span class="number">100</span>,<span class="number">95</span>,<span class="number">58</span>,<span class="number">95</span>,<span class="number">87</span>,<span class="number">79</span>, <span class="number">78</span>,<span class="number">89</span>,</span><br><span class="line"><span class="number">89</span>,<span class="number">68</span>,<span class="number">55</span>,<span class="number">92</span>,<span class="number">95</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">92</span>,<span class="number">58</span>,<span class="number">100</span>,<span class="number">73</span>,<span class="number">66</span>)</span><br><span class="line"><span class="comment">#Check the length of the vector to make sure you have all 30 students' grades.</span></span><br><span class="line">length(x)</span><br><span class="line"><span class="comment">#Use the sample( ) function to randomly sample 10 students,</span></span><br><span class="line"><span class="comment">#Find their associated grades and put them in a vector.</span></span><br><span class="line">mydata=sample(<span class="number">30</span>, <span class="number">10</span>, replace=<span class="literal">FALSE</span>)</span><br><span class="line">x.mydata=x[mydata]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> 统计代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R代写: Univariate Statistics and Methodology using R</title>
      <link href="/2019/01/15/R%E4%BB%A3%E5%86%9920190115/"/>
      <url>/2019/01/15/R%E4%BB%A3%E5%86%9920190115/</url>
      
        <content type="html"><![CDATA[<h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>For the course assignment, you will be expected to retrieve, clean, and analyse a data set. In this<br>document we provide the primary research questions to be answered, information on the structure<br>and format of the final report, information on code that should be submitted, and a brief overview<br>of the marking criteria. You can find the codebook for the data set and the R script template on<br>LEARN. The data for this assignment come from the Timed picture naming in seven languages study<br>(Bates, et al., 2003) available as part of the (International Picture Naming Project)[<a href="https://crl.ucsd" target="_blank" rel="noopener">https://crl.ucsd</a>.<br>edu/experiments/ipnp/]</p><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question 1"></a>Question 1</h3><p>Is there a relationship between the frequency of a target word in the English corpus and reaction<br>time (RT) on a picture-naming task? Once you are content that the data are appropriately cleaned,<br>run the following model:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m1 &lt;- lm(rttar ~ lnfreq, data = df_e)</span><br></pre></td></tr></table></figure><h4 id="Question-1-1"><a href="#Question-1-1" class="headerlink" title="Question 1.1"></a>Question 1.1</h4><p>Concisely report and interpret the results of the model.</p><h4 id="Question-1-2"><a href="#Question-1-2" class="headerlink" title="Question 1.2"></a>Question 1.2</h4><p>What is the predicted RT for a word with a frequency of 20?</p><p>Hint: Don’t forget the the frequency variable is log-transformed (see codebook for details) and that,<br>in R, exp() is the inverse function of log().</p><h4 id="Question-1-3"><a href="#Question-1-3" class="headerlink" title="Question 1.3"></a>Question 1.3</h4><p>Produce and interpret a diagnostic plot of the model that shows whether or not the model residuals</p><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question 2"></a>Question 2</h3><p>Do target word length and the number of synonyms a word has have additional effects on RT above<br>and beyond that of word frequency in the English language data set?</p><h4 id="Question-2-1"><a href="#Question-2-1" class="headerlink" title="Question 2.1"></a>Question 2.1</h4><p>Fit an appropriate model to test this question.</p><h4 id="Question-2-2"><a href="#Question-2-2" class="headerlink" title="Question 2.2"></a>Question 2.2</h4><p>Run model diagnostics and, if needed, re-fit the model.</p><h4 id="Question-2-3"><a href="#Question-2-3" class="headerlink" title="Question 2.3"></a>Question 2.3</h4><p>Report and interpret the results of the final model.</p><h3 id="Question-3"><a href="#Question-3" class="headerlink" title="Question 3"></a>Question 3</h3><p>Do variables entered as predictors in the Question 2 model predict whether or not at least one par-<br>ticipant will produce an error response on a picture naming task in the English language data set?<br>Pictures for which there are any invalid or incorrect responses should be coded as containing errors.</p><h4 id="Question-3-1"><a href="#Question-3-1" class="headerlink" title="Question 3.1"></a>Question 3.1</h4><p>Fit, report, and interpret an appropriate model to test this question.</p><h4 id="Question-3-2"><a href="#Question-3-2" class="headerlink" title="Question 3.2"></a>Question 3.2</h4><p>What is the predicted probability of a correct response on a picture whose name has a frequency of<br>12, is 3 syllables long and has only one form?</p><h3 id="Question-4"><a href="#Question-4" class="headerlink" title="Question 4"></a>Question 4</h3><p>Does the effect of target word frequency on RT vary significantly between Chinese, Hungarian, and<br>Spanish?</p><p>Hint: You will need to construct a single data frame to answer this question.</p><h4 id="Question-4-1"><a href="#Question-4-1" class="headerlink" title="Question 4.1"></a>Question 4.1</h4><p>Fit an appropriate model to test this question. Run model diagnostics and re-fit the model if needed.</p><h4 id="Question-4-2"><a href="#Question-4-2" class="headerlink" title="Question 4.2"></a>Question 4.2</h4><p>Report and interpret the results of the final model.</p><h4 id="Question-4-3"><a href="#Question-4-3" class="headerlink" title="Question 4.3"></a>Question 4.3</h4><p>Which language has the weakest effect of frequency on RT? Describe it in terms of unit change in RT<br>as a result in a unit change in log-frequency.</p>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> 统计代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R代写：HWA Voting in Sweden</title>
      <link href="/2019/01/14/R%E4%BB%A3%E5%86%9920190114/"/>
      <url>/2019/01/14/R%E4%BB%A3%E5%86%9920190114/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h3><p>The purpose of this home work assignment is to get practical experience in<br>modeling data using logit and probit models, both for binary and ordered data.<br>This includes estimation using the software package R, to intpret and analyze<br>the results.</p><p>R is installed in computer room H319 and it is also possible to access through<br>remote desktop to ts03.dis.uu.se and log on as if you actually were in H319.</p><h3 id="2-Written-report"><a href="#2-Written-report" class="headerlink" title="2 Written report"></a>2 Written report</h3><p>A written report should be handed in no later than the date indicated on the<br>schedule. The written report should be written in such a way that there is no<br>problem to understand what have been done and why.</p><h3 id="3-Assignment"><a href="#3-Assignment" class="headerlink" title="3 Assignment"></a>3 Assignment</h3><p>Below, the assignment is stated for the Conservative party, but as mentioned<br>above, you will be assigned what party to analyse.</p><ol><li>Display and interpret descriptive statistics for how the voters voted in the<br>last general election in Sweden (variable B12).</li></ol><ol start="2"><li><p>Specify and estimate logit model for voters voting on your assigned party.<br>Dependent variable is “voting for the XXX party” (binary variable: 0,1).<br>The model should include a Likert scale explanatory variable. Justify/<br>motivate the model/ choice of variables. You should motivate why a speci…c variable is in the model and what sign you expect on the coe¢ cient.<br>Estimate and interpret the model.</p></li><li><p>Interpret the parameters of the model in a way you …nd appropriate. Also,<br>for a typical individual of the sample (pick one), calculate the (model<br>implied) probability that this individual would vote for the conservative<br>party. Change the value of the explanatory variables and analyze how<br>the probability change. (What values of the other explanatory variables<br>would it make sense to use? Discuss and motivate)</p></li></ol><ol start="4"><li><p>Given the logit model in task 2: Test, using a likelihood ratio test, if<br>the (constant) scaling implied by the Likert scale, i.e. 1,2,3 etc is valid.<br>That is, is the restriction that the distances between the 1 and 2 are the<br>same as the distance between 2 and 3 etc valid? (You need to estimate<br>two models, one restricted and one unrestricted). What is the implication<br>of the test result in terms of the model and how to use the Likert variable<br>in this situation? Can this result be generalized, if so, how, if not, what<br>would be the recommended practice in this situation?</p></li><li><p>Make a two by two table of observed responses versus predicted. Use a 0.5<br>cut of value and then a cut of value corresponding to the unconditional<br>probability to vote for you assigned (XXX) party. Interpret and discuss.<br>Choose a goodness-of-…t measure to evaluate the model.</p></li></ol><ol start="6"><li>Using the probit instead of the logit, estimate the model in 2 and compare<br>the implied probabilities, how do they di¤er? Compare the two by two<br>table of observed responses versus predicted for the two models. Which of<br>the Logit and Probit would you recommend to use for this data? Discuss<br>and motivate.</li></ol>]]></content>
      
      
      <categories>
          
          <category> R代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python代写20190114</title>
      <link href="/2019/01/14/python%E4%BB%A3%E5%86%9920190114/"/>
      <url>/2019/01/14/python%E4%BB%A3%E5%86%9920190114/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java代写: Assignment3</title>
      <link href="/2019/01/11/Java%E4%BB%A3%E5%86%99-20190111/"/>
      <url>/2019/01/11/Java%E4%BB%A3%E5%86%99-20190111/</url>
      
        <content type="html"><![CDATA[<h3 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h3><p>Work out the answers to these problems manually without the use of a computer.  This will<br>help you develop the ability to read and analyze code.  Problems of this type will also appear<br>on exams.  After coming up with answers manually, write test code to check whether you have<br>solved the problems correctly. </p><h3 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> d1 = <span class="number">3</span> / <span class="number">2</span> * <span class="number">3.0</span> + <span class="number">8</span> / <span class="number">3</span>; </span><br><span class="line"><span class="keyword">double</span> d2 = <span class="number">2.0</span> * <span class="number">4</span> / <span class="number">5</span> + <span class="number">6</span> / <span class="number">4.0</span>;</span><br><span class="line">System.out.println( d1 );</span><br><span class="line">System.out.println( d2 );</span><br></pre></td></tr></table></figure><p>1) When the code in Figure 1 runs, what does it output to the console? (5 points)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"2+3="</span> + <span class="number">2</span> + <span class="number">3</span>);</span><br><span class="line">System.out.println(<span class="number">1</span> + <span class="number">2</span> + <span class="string">"3"</span>);</span><br><span class="line">System.out.println(<span class="string">"2*3="</span> + <span class="number">2</span> * <span class="number">3</span>);</span><br><span class="line">System.out.println(<span class="number">4</span> - <span class="number">1</span> + <span class="string">"x"</span>);</span><br><span class="line">System.out.println(<span class="string">"x"</span> + <span class="number">4</span> - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>2) When the code in Figure 2 runs, what does it output to the console? (5 points)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println((<span class="keyword">double</span>) <span class="number">2</span> + <span class="number">3</span> / <span class="number">2</span>);</span><br><span class="line">System.out.println((<span class="keyword">double</span>) (<span class="number">2</span> + <span class="number">3</span>) / <span class="number">2</span>);</span><br><span class="line">System.out.println((<span class="keyword">double</span>) <span class="number">22</span> / <span class="number">4</span>);</span><br><span class="line">System.out.println(<span class="number">22</span> / (<span class="keyword">double</span>) <span class="number">4</span>);</span><br><span class="line">System.out.println((<span class="keyword">double</span>) (<span class="number">22</span> / <span class="number">4</span>));</span><br></pre></td></tr></table></figure><p>3) When the code in Figure 3 runs, what does it output to the console? (5 points)</p>]]></content>
      
      
      <categories>
          
          <category> Java代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java代写 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论代写</title>
      <link href="/2019/01/11/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%BB%A3%E5%86%9920190111/"/>
      <url>/2019/01/11/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%BB%A3%E5%86%9920190111/</url>
      
        <content type="html"><![CDATA[<p>Let $X$ and $Y$ be two independent random variables that uniformly distributed on (0, 1).</p><p>How would you define the conditional density of $X$ given that $X&gt;Y$? What is $E[X|X&gt;Y]$?</p>]]></content>
      
      
      <categories>
          
          <category> 概率论代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论代写 </tag>
            
            <tag> Probability </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python代写: CSE 231 Introduction to Programming I</title>
      <link href="/2019/01/10/Python%E4%BB%A3%E5%86%9920190110onlinecourse/"/>
      <url>/2019/01/10/Python%E4%BB%A3%E5%86%9920190110onlinecourse/</url>
      
        <content type="html"><![CDATA[<p>Python网课代修，Python入门课</p><h3 id="CSE-231"><a href="#CSE-231" class="headerlink" title="CSE 231"></a>CSE 231</h3><p>Introduction to Programming I<br>Spring Semester, 2019 </p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Introduction to programming using Python. Design, implementation and testing of programs to solve problems primarily in engineering, mathematics and science. Programming fundamentals, functions, classes, lists, and dictionaries.</p><h3 id="Objectives"><a href="#Objectives" class="headerlink" title="Objectives"></a>Objectives</h3><p>In this course, students will study general programming concepts, as well as a modern programming language which illustrates those concepts. Students will design, implement and test Python programs.</p><p>At the end of this course when presented with a problem we expect that a student with respond: “Hey, I can write a program to do that!”</p><h3 id="Highlights"><a href="#Highlights" class="headerlink" title="Highlights"></a>Highlights</h3><p>You are responsible for all the details in the syllabus below, but here are highlights.</p><p>Grade Points: 1000 points from weekly programming projects, exercises, and three exams.<br>Labs including pre-labs are required: your final grade will be reduced if you miss more than two.<br>If you collaborate on programming projects, you will get a zero.<br>We frequently send email from msu.edu and cse.msu.edu . It is important that you ensure that your email client isn’t routing our emails to Junk – otherwise you will miss critical email about the course.</p><h3 id="Due-Dates"><a href="#Due-Dates" class="headerlink" title="Due Dates"></a>Due Dates</h3><p>The Due Dates Page is your guide to due dates for the semester: <a href="https://www.cse.msu.edu/~cse231/due_dates.html" target="_blank" rel="noopener">https://www.cse.msu.edu/~cse231/due_dates.html</a> </p><p>To allow some flexibility:</p><ul><li>Programming Projects: late submissions are reduced 50% for up to one day late; no credit after one day.<br>Labs : Contact your TA about any extenuating circumstances before lab. Old labs cannot be made up.<br>Except for extreme circumstances (e.g. a car crash puts you overnight in a hospital) there will be no other extensions.</li><li>Due times are U.S. Eastern Standard Time. Mimir uses your computer’s time setting to display time in your browser so if your computer’s time is set to a different time zone, you will be misled by displayed due dates and times.</li></ul><h3 id="Course-Grades"><a href="#Course-Grades" class="headerlink" title="Course Grades"></a>Course Grades</h3><p>Each student’s course grade will be based on the sum of the points earned in the following categories (points are different for the Honors Section): </p><ul><li>Examinations    (45% of total course points)</li><li>Computer Projects   (45% of total course points)</li><li>Chapter Exercises   (10% of total course points)</li></ul><p>To be eligible to earn a non-zero grade in the course, a student normally must earn at least 50% of the total points for the examinations and earn at least 50% of the total points for the computer projects.</p><p>The following table gives the scale for course grades: </p><ul><li>4.0 90% of points available</li><li>3.5 85% of points available</li><li>3.0 80% of points available</li><li>2.5 75% of points available</li><li>2.0 70% of points available</li><li>1.5 65% of points available</li><li>1.0 60% of points available</li></ul><p>The instructor reserves the right to adjust the scale for course grades, if necessary. </p><p>Important: Students who get a zero (“no credit”) on more than two (2) laboratory exercises will have their course grade reduced by 0.5 for each laboratory exercise missed beyond two. For example, if a student had sufficient points to normally earn a 3.0, but zeros four (4) laboratory exercises, that student’s grade will be reduced by 2*0.5 to a 2.0 course grade.</p>]]></content>
      
      
      <categories>
          
          <category> Python代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python代写 </tag>
            
            <tag> Python </tag>
            
            <tag> Python网课 </tag>
            
            <tag> 网课代修 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python代写: CS521_Project Part1</title>
      <link href="/2019/01/02/Python%E4%BB%A3%E5%86%99-CS521-Project-Part1/"/>
      <url>/2019/01/02/Python%E4%BB%A3%E5%86%99-CS521-Project-Part1/</url>
      
        <content type="html"><![CDATA[<h3 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h3><p>This assignment is the first of a mini project where you are going to demonstrate your understanding of the modules of this class.<br>The mini project is about building a small ETL program in python. Each part will focus on different portions / stages of the ETL process.</p><h3 id="Assignment-Background"><a href="#Assignment-Background" class="headerlink" title="Assignment Background"></a>Assignment Background</h3><p>Summarizing your acquired knowledge from modules 1-4, we are going to focus on the E part of the ETL process. For reference, ETL stands for Extract, Transform, Load. We are going to focus here on Extract.<br>Assignment Statement</p><p>•   Read CSV files – You may use the csv module and its methods for this project.  Please see <a href="https://docs.python.org/3.5/library/csv.html" target="_blank" rel="noopener">https://docs.python.org/3.5/library/csv.html</a> for more information.<br>•   Load the content of the CSV files into usable records<br>•   Use polymorphism to hold data<br>•   Use inheritance to process data </p><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements:"></a>Requirements:</h3><p>To extract the raw data (row) into a usable format that can be relied upon by the rest of your application, we will define the concept of a record.</p><ol><li>Create class: AbstractRecord<br>a.  This class will contain 1 (instance) member: name</li><li>Create a record class for each of the files you want to load.  When a record is referenced in the requirements, we are referring to one of the following records:<br>BaseballStatRecord or StockStatRecord.<br>And including the following functionality:<br>a.  inherit the AbstractRecord<br>b.  have an initializer method that takes the data you want to load as arguments:<br>For stocks:<br>•   Stock symbol (ticker)→ this should be stored in the “name” member<br>•   Company name (company_name)<br>•   Exchange country (exchange_country)<br>•   Stock Price (price)<br>•   Exchange Rate (exchange_rate)<br>•   Shares Outstanding (shares_outstanding)<br>•   Net Income (net_income)<br>•   Market Value in USD (market_value_usd) – This value is calculated in step 4e<br>•   Price/Earnings Ratio (pe_ratio) – This step is calculated in step 4e<br>c.  for baseball<br>•   player name → this should be stored in the “name” member<br>•   salary<br>•   G (Games played)<br>•   AVG (which is the batting average)<br>d.  For each record type, override <strong>str</strong>() (<a href="https://docs.python.org/3/reference/datamodel.html#object.__str_" target="_blank" rel="noopener">https://docs.python.org/3/reference/datamodel.html#object.__str_</a>_ ) to return a string of the form: “<name of="" the="" record="" type=""> ( <value1>, <value2>,  &lt;…&gt; )” using “str.format”.<br>For floats please only display 2 decimal numbers (2 numbers after the comma) for monetary values and 3 decimal places for batting average.  It may be easier for you to work with USD.</value2></value1></name></li></ol><p>To load the data we are going to need a CSV reader.</p><ol start="3"><li>Create 1 AbstractCSVReader class<br>a.  The class should have an initializer method taking the path to the file to be read<br>b.  The class should have the method: row_to_record(row)<br>•   Where “row” is a row from the CSV as a dictionary<br>•   This method should be implemented by simply raising NotImplementedError.<br>c.  The class should have the method: load() that returns a list of records. Load should:<br>i.  Use “with” to open the CSV files<br>ii. read each row from the file into a dictionary: keys are the column names and values are the matching values (see <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" target="_blank" rel="noopener">https://docs.python.org/3/library/csv.html#csv.DictReader</a> )<br>iii.    call the row_to_record method and send the row as a parameter<br>iv. handle the BadData exception raised by  row_to_record by skipping the record – For more on BadData Exception see step 5<br>v.  If no exception is raised: then the record should be added to the list of records.<br>vi. Once all records are loaded into the list, returns the list.</li><li>Create a CSV reader class for each of the files you want to load<br>i.e. BaseballCSVReader and StocksCSVReader<br>a.  The class should inherit the AbstractCSVReader<br>b.  Each class should implement its own row_to_record method. The input is a dictionary of unvalidated data, it should validate the data, parse it, create new record and return the record created.<br>c.  The validation depends on your concrete record:<br>•   Validation fails for any row that is missing any piece of information<br>•   Validation fails if the name (symbol or player name) is empty<br>•   Validation fails if any of the numbers (int or float) cannot be parsed (watch out of the division by zero!!)<br>d.  If validation fails: this method should raise a BadData exception (requirement #5)<br>e.  StocksCSVReader should have two calculations using the extracted records:<br>•   market_value_usd  = Price <em> ExchangeRate </em> SharesOutstanding<br>•   pe_ratio = Price / NetIncome{}</li><li>Create a BadData custom exception to handle record creation errors</li><li>From your main section ( <a href="https://docs.python.org/3/library/__main__.html" target="_blank" rel="noopener">https://docs.python.org/3/library/__main__.html</a> )<br>a.  load the CSV (e.g.  BaseballCSVReader(‘path to my CSV’).load())<br>b.  Print each record to the console. You are to use: print(record)</li></ol>]]></content>
      
      
      <categories>
          
          <category> Python代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++代写：Software Development with C++</title>
      <link href="/2017/10/26/C++%E4%BB%A3%E5%86%992017102601/"/>
      <url>/2017/10/26/C++%E4%BB%A3%E5%86%992017102601/</url>
      
        <content type="html"><![CDATA[<p>使用QT实现一个聊天室。</p><p>Your task is to create a peer to peer chat program with Qt. You have been given networking code that finds and connects to peers on the local network and a GUI that demonstrates the basics of how the networking code is used. </p><p>You must extend the given project to provide user profile support, images, private chatrooms and private </p><p>messaging. </p><p>The program’s interface must allow the user to do the following: </p><ul><li>Set their nickname (aka username or handle). </li><li>Set user profile details, including an image file, time zone and location. </li><li>Send messages. </li><li>Send private messages to users. </li><li>Create private chatrooms. </li><li>Invite users to private chatrooms. </li><li>Join private chatrooms. </li><li>Kick users from private rooms. </li><li>Send files to rooms. </li><li>Send files to users. </li><li>Save chat transcripts to files (excluding exchanged files) </li></ul><p>The program will be using Qt, and will need to utilise the Qt data types.<br>The supplied networking code handles passing messages between clients, and all running clients (on the same local network) automatically connect to each other in the main (public) chatroom. The code in the Networking folder will not need modification.</p>]]></content>
      
      
      <categories>
          
          <category> C++代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++代写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计代写: Homework1</title>
      <link href="/2017/10/25/%E7%BB%9F%E8%AE%A1%E4%BB%A3%E5%86%9920171025/"/>
      <url>/2017/10/25/%E7%BB%9F%E8%AE%A1%E4%BB%A3%E5%86%9920171025/</url>
      
        <content type="html"><![CDATA[<p>The following conditions must be met: </p><ol><li>Pick any  topic/question of ﬁnance/economics. </li><li>Use at  least 4 related variables, with at  least 200 observations  (per variable). </li><li>Carefully  document  the  source  of  your  data,  the  variable  deﬁnitions.  What’s  your<br>dependent variable? </li><li>Summarize your data, plot some graphs. Need any data cleaning? </li><li>Address some  important  issues, such as stationarity,  seasonality, etc.  Need any dum-<br>mies? </li><li>Build several models (such as diﬀerent independent variables, diﬀerent types of models,<br>etc.). </li><li>Use 80% data as training and the rest 20% as testing. </li><li>Compare and contrast diﬀerent relevant models and speciﬁcations to evaluate which is<br>best. </li><li>State at  least one hypothesis.  Test your hypotheses. </li><li>What’s your conclusions? </li><li>Your report should be clear, concise, and communicate eﬀectively.  It should not require<br>any detective work on  the part of  the  reader  to ﬁgure out what  you  have done.  Ev-<br>erything must be explained, at least brieﬂy.  Be sure to analyze your results in writing<br>and draw conclusions. </li><li>Treat  it  as  a  formal  business  report,  not  just  an  assignment.  Carefully  format  your<br>ﬁgures, fonts and page  layout.</li></ol>]]></content>
      
      
      <categories>
          
          <category> 统计代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R代写 </tag>
            
            <tag> R </tag>
            
            <tag> 统计代写 </tag>
            
            <tag> stat代写 </tag>
            
            <tag> 统计 </tag>
            
            <tag> stat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python代写: Tic Tac Toe</title>
      <link href="/2017/10/24/Python%E4%BB%A3%E5%86%9920171024/"/>
      <url>/2017/10/24/Python%E4%BB%A3%E5%86%9920171024/</url>
      
        <content type="html"><![CDATA[<p>实现tic tac toe 算法，无论怎么下，都是赢</p><h1 id="Homework-4-Tic-Tac-Toe"><a href="#Homework-4-Tic-Tac-Toe" class="headerlink" title="Homework 4: Tic Tac Toe"></a>Homework 4: Tic Tac Toe</h1><p>Tic Tac Toe – child’s play, right?  You probably know that perfectly played games will always result in a draw.  In this assignment you will implement a computer’s strategy for the game.</p><p>You will play against a random player – a “monkey.”  Let’s call him Harry.  Since Harry plays randomly, you will beat him most of the time.  But here’s the thing: Harry is insatiable.  He LOVES tic tac toe and will happily play 10,000 games in a row.  Since every single move is random, he might pull some things you wouldn’t expect.   You will each start about half the matches.</p><p>You may work in pairs for this assignment.  So we know whom to credit, both of your names should be at the top of t3.py (replacing mine).</p><p>The assignment is due Wednesday October 25th at 1:30am.  You can check it out here.</p><p>Your noble adversary.</p><h2 id="Your-Task"><a href="#Your-Task" class="headerlink" title="Your Task"></a>Your Task</h2><p>In this repository, you will find t3.py, human_match.py, and monkey_match.py.</p><p>Running ./human_match.py starts an interactive match against the computer, while ./monkey_match.py launches 10000 games between the computer a random player (monkey).  The former will probably prove useful for debugging; the latter will serve for your grade.  After your initial check-out, computer will play randomly – just like the monkey.</p><p>The classes you will maniuplate are in t3.py.  Check out the documentation by doing pydoc t3 from the command line.</p><p>You will find a game class, as well as three player classes.  The former includes a board and defines the game play.  The board is defined as a list 9 elements long that initially consists of copies of None and is filled in with X’s and O’s with each move.  The indexing runs across rows and then down columns, as shown.  If you print the game, it will convert the board to string, and should be readily comprehensible.  The game also takes care of switching back and forth between the two players, eliciting moves from each, rejecting invalid moves (filled squares), and ultimately declaring a winner.  </p><p>The player class is inherited by monkey, human, and computer.  Each of these players can can do two things – be initialized to play X’s or O’s, and render a move when presented with a board.</p><p>You will implement the computer’s move() function.  This is part of a class (woohoo!), but all of your work should be restricted to that single function.  I suggest that you implement the Newell &amp; Simon strategy from the Wikipedia page.  Though your computer will start all its matches in the center (boring!), this is a self-consistent strategy that will never lose.  You can use other strategies if you want, but TAs will issue partial credit for the following defined steps:</p><ol><li>Win if possible</li><li>Block your opponent from winning.</li><li>Create a fork</li><li>Force your opponent to play defense, if it does not result in a fork.</li><li>Block your opponent from taking a fork.</li><li>Take the center.</li><li>Take a corner opposite your opponent.</li><li>Take an empty corner.</li><li>Take a side.</li></ol><p>A skeleton for this approach is already defined for you.  Further, game already implements check_for_wins() and check_for_twos(), which should prove useful to you in evaluating the conditions.</p><p>Of these strategies, #4 may be particularly difficult.  You can see code for it below, if you get stuck.</p><p><details><summary>Strategy for #4, “Force Defense”</summary><br>We’re interested in forcing your opponent to play defense, but only if it does not result in a fork for them.  The first condition just means that we create a two that they have have to block.  The second piece means that that two must not give them a fork – a sure-win.  We can do this easily, by making a copy of the game – hypo_match, below – and seeing how the game would play out, looking one move ahead.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Get posible squares to play for a "two"</span></span><br><span class="line">self_twos = match.check_for_twos(self.mark)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># We'll now consider hypothetical games, </span></span><br><span class="line"><span class="comment"># where we play in each of the "two" positions.</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> self_twos:                 <span class="comment"># For each of these</span></span><br><span class="line">    hypo_match = dc(match)          <span class="comment"># create a copy of the game -- dc is deepcopy</span></span><br><span class="line">    hypo_match.board[i] = self.mark <span class="comment"># try playing there.</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Now look for the win implied by your "two".</span></span><br><span class="line">    <span class="comment"># Your opponent would have to play here.</span></span><br><span class="line">    w = hypo_match.check_for_wins(self.mark) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># For your OPPPONENT, get any potential twos.</span></span><br><span class="line">    hypo_twos = hypo_match.check_for_twos(self.other_mark)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># If your potential win is not just a two for them,</span></span><br><span class="line">    <span class="comment"># but in fact a DOUBLE two -- a fork -- don't move here!</span></span><br><span class="line">    <span class="keyword">if</span> w <span class="keyword">in</span> hypo_twos <span class="keyword">and</span> hypo_twos[w] &gt; <span class="number">1</span>: <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Otherwise, it meets the condition.  Do it!!</span></span><br><span class="line">    <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure></details></p><p><br></p><h2 id="Don’t-forget-to-commit-and-check-your-work"><a href="#Don’t-forget-to-commit-and-check-your-work" class="headerlink" title="Don’t forget to commit, and check your work!"></a>Don’t forget to commit, and check your work!</h2>]]></content>
      
      
      <categories>
          
          <category> Python代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python代写 </tag>
            
            <tag> Python </tag>
            
            <tag> 算法代写 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计代写:Assignment1T42017</title>
      <link href="/2017/10/22/%E7%BB%9F%E8%AE%A1%E4%BB%A3%E5%86%99-Assignment1T42017/"/>
      <url>/2017/10/22/%E7%BB%9F%E8%AE%A1%E4%BB%A3%E5%86%99-Assignment1T42017/</url>
      
        <content type="html"><![CDATA[<h3 id="Section-A"><a href="#Section-A" class="headerlink" title="Section A"></a>Section A</h3><p>This section is to be completed using your scientific calculator for the required workings. </p><ol><li>Consider the data set Corporate below, containing the body corporate fees ($) for 21 downtown 2-bedroom apartments.</li></ol><p>a)  Specify if the variable Corporate is Quantitative or Categorical. Explain your answer.      (2) HINT: Think about the variable!</p><p>b)      When data is collected for the survey. Give an example of one categorical variable that could be collected from the same sample of apartments.                      (1)</p><p>c)  Make a split stemplot of the Corporate data. Make the stem $1000’s and leaf $100’s.         Remember to include a Key.  </p><h3 id="Section-B"><a href="#Section-B" class="headerlink" title="Section B"></a>Section B</h3><p>This section is to be completed using R Commander for the required workings and should be typed on the computer.<br>Cowles and Davis’s Data on Volunteering<br>These data come from a study of the personality determinants of volunteering for psychological research. The variables are:<br>Neuroticism     scale from Eysenck personality inventory<br>Extraversion    scale from Eysenck personality inventory<br>Sex     a factor with levels: female; male<br>Volunteer   volunteering, a factor with levels: no; yes</p><p>Load to R Commander using the following pathway: Open R and load R Cmdr.</p>]]></content>
      
      
      <categories>
          
          <category> 统计代写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计代写 </tag>
            
            <tag> stat代写 </tag>
            
            <tag> 统计 </tag>
            
            <tag> stat </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
